@inject CNHSystemService _sys
@inject NavigationManager _navi
@using CNHephaestus.Pages.Components.Windows

<div class="SystemContextMenu">
 <div class="WindowsPerma" >
  <div id="TestWindow" class="ContextMenuButton" @onclick="TestWindowToggle">
    Window
   </div>
  <div id="TestWindow2" class="ContextMenuButton" @onclick="TestWindow2Toggle">
   Window2
  </div>
  <div id="TestWindow2" class="ContextMenuButton" @onclick="Window3">
   ManyWindow3
  </div>
  </div>
 <div class="WindowsCurrentlyOpen">
  @foreach(Window w in _sys.ActiveWindows)
  {
   @if (_sys.ActiveWindow == w)
   {
    <div class="WindowActive" @onclick="() => _sys.SetActiveWindow(null)" @oncontextmenu="() => _sys.CloseWindow(w)">
      @w.Title
      </div>
   } else
   {
    <div class="WindowInactive" @onclick="() => _sys.SetActiveWindow(w)" @oncontextmenu="() => _sys.CloseWindow(w)">
     @w.Title
    </div>
   }
  }
 </div>
</div>

@code {

 private static Window testWindow = new Window("TestWindow", "TestWindow");
 private static Window testWindow2 = new Window("TestWindow", "TestWindow2");
 private int c = 0;

 private async Task TestWindowToggle()
 {
  if (_sys.ActiveWindow == testWindow)
   _sys.CloseWindow(testWindow);
  else
   _sys.SetActiveWindow(testWindow);

  StateHasChanged();
 }

 private async Task TestWindow2Toggle()
 {
  if (_sys.ActiveWindow == testWindow2)
   _sys.CloseWindow(testWindow2);
  else
   _sys.SetActiveWindow(testWindow2);

  StateHasChanged();
 }

 private void Window3()
 {
  _sys.SetActiveWindow(new Window("TestWindow", "Window " + c++));
 }


}
